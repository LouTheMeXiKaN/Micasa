import 'package:equatable/equatable.dart';

class User extends Equatable {
  final String id;
  final String? username;
  final String? email;
  final String? phoneNumber;
  final String? profilePictureUrl;
  final String? bio;
  final bool isUsernameAutogenerated;
  final DateTime createdAt;

  const User({
    required this.id,
    this.username,
    this.email,
    this.phoneNumber,
    this.profilePictureUrl,
    this.bio,
    required this.isUsernameAutogenerated,
    required this.createdAt,
  });
  
  // Helper to check if profile initialization is needed (Screen 25 Gate)
  // This logic enforces the requirements defined in SL7.md for Screen 25.
  bool get requiresInitialization => isUsernameAutogenerated || phoneNumber == null || username == null;

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      id: json['id'] as String,
      username: json['username'] as String?,
      email: json['email'] as String?,
      phoneNumber: json['phone_number'] as String?,
      profilePictureUrl: json['profile_picture_url'] as String?,
      bio: json['bio'] as String?,
      isUsernameAutogenerated: json['is_username_autogenerated'] as bool,
      createdAt: DateTime.parse(json['created_at'] as String),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'username': username,
      'email': email,
      'phone_number': phoneNumber,
      'profile_picture_url': profilePictureUrl,
      'bio': bio,
      'is_username_autogenerated': isUsernameAutogenerated,
      'created_at': createdAt.toIso8601String(),
    };
  }

  @override
  List<Object?> get props => [
        id,
        username,
        email,
        phoneNumber,
        profilePictureUrl,
        bio,
        isUsernameAutogenerated,
        createdAt,
      ];
      
  // Represents an empty user for initial states (if needed)
  static final empty = User(id: '', isUsernameAutogenerated: false, createdAt: DateTime(2024));
}

// Kept for internal API responses
class AuthResponse {
  final User user;
  final String token;

  const AuthResponse({
    required this.user,
    required this.token,
  });

  factory AuthResponse.fromJson(Map<String, dynamic> json) {
    return AuthResponse(
      user: User.fromJson(json['user'] as Map<String, dynamic>),
      token: json['token'] as String,
    );
  }
}