import 'package:equatable/equatable.dart';

class User extends Equatable {
  final String id;
  final String? username;
  final String? email;
  final String? phoneNumber;
  final bool isPhoneVerified;
  final String? profilePictureUrl;
  final String? bio;
  final String? instagramHandle;
  final String? personalWebsiteUrl;
  final bool hasHyperwalletAccount;
  final bool isUsernameAutogenerated;
  final bool privacyShowUpcomingEvents;
  final bool privacyShowPastEvents;
  final bool privacyPastEventsIncludeHosted;
  final bool privacyPastEventsIncludeCollaborated;
  final bool privacyPastEventsIncludeAttended;
  final DateTime createdAt;

  const User({
    required this.id,
    this.username,
    this.email,
    this.phoneNumber,
    this.isPhoneVerified = false,
    this.profilePictureUrl,
    this.bio,
    this.instagramHandle,
    this.personalWebsiteUrl,
    this.hasHyperwalletAccount = false,
    required this.isUsernameAutogenerated,
    this.privacyShowUpcomingEvents = true,
    this.privacyShowPastEvents = true,
    this.privacyPastEventsIncludeHosted = true,
    this.privacyPastEventsIncludeCollaborated = true,
    this.privacyPastEventsIncludeAttended = true,
    required this.createdAt,
  });
  
  // Helper to check if profile initialization is needed (Screen 25 Gate)
  // This logic enforces the requirements defined in SL7.md for Screen 25.
  bool get requiresInitialization => isUsernameAutogenerated || phoneNumber == null || username == null;

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      id: json['user_id'] as String,
      username: json['username'] as String?,
      email: json['email'] as String?,
      phoneNumber: json['phone_number'] as String?,
      isPhoneVerified: json['is_phone_verified'] as bool? ?? false,
      profilePictureUrl: json['profile_picture_url'] as String?,
      bio: json['bio'] as String?,
      instagramHandle: json['instagram_handle'] as String?,
      personalWebsiteUrl: json['personal_website_url'] as String?,
      hasHyperwalletAccount: json['has_hyperwallet_account'] as bool? ?? false,
      isUsernameAutogenerated: json['is_username_autogenerated'] as bool? ?? false,
      privacyShowUpcomingEvents: json['privacy_show_upcoming_events'] as bool? ?? true,
      privacyShowPastEvents: json['privacy_show_past_events'] as bool? ?? true,
      privacyPastEventsIncludeHosted: json['privacy_past_events_include_hosted'] as bool? ?? true,
      privacyPastEventsIncludeCollaborated: json['privacy_past_events_include_collaborated'] as bool? ?? true,
      privacyPastEventsIncludeAttended: json['privacy_past_events_include_attended'] as bool? ?? true,
      createdAt: json['created_at'] != null 
          ? DateTime.parse(json['created_at'] as String)
          : DateTime.now(), // Default to now if not provided
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'user_id': id,
      'username': username,
      'email': email,
      'phone_number': phoneNumber,
      'is_phone_verified': isPhoneVerified,
      'profile_picture_url': profilePictureUrl,
      'bio': bio,
      'instagram_handle': instagramHandle,
      'personal_website_url': personalWebsiteUrl,
      'has_hyperwallet_account': hasHyperwalletAccount,
      'is_username_autogenerated': isUsernameAutogenerated,
      'privacy_show_upcoming_events': privacyShowUpcomingEvents,
      'privacy_show_past_events': privacyShowPastEvents,
      'privacy_past_events_include_hosted': privacyPastEventsIncludeHosted,
      'privacy_past_events_include_collaborated': privacyPastEventsIncludeCollaborated,
      'privacy_past_events_include_attended': privacyPastEventsIncludeAttended,
      'created_at': createdAt.toIso8601String(),
    };
  }

  @override
  List<Object?> get props => [
        id,
        username,
        email,
        phoneNumber,
        isPhoneVerified,
        profilePictureUrl,
        bio,
        instagramHandle,
        personalWebsiteUrl,
        hasHyperwalletAccount,
        isUsernameAutogenerated,
        privacyShowUpcomingEvents,
        privacyShowPastEvents,
        privacyPastEventsIncludeHosted,
        privacyPastEventsIncludeCollaborated,
        privacyPastEventsIncludeAttended,
        createdAt,
      ];
      
  // Represents an empty user for initial states (if needed)
  static final empty = User(
    id: '',
    isPhoneVerified: false,
    hasHyperwalletAccount: false,
    isUsernameAutogenerated: false,
    privacyShowUpcomingEvents: true,
    privacyShowPastEvents: true,
    privacyPastEventsIncludeHosted: true,
    privacyPastEventsIncludeCollaborated: true,
    privacyPastEventsIncludeAttended: true,
    createdAt: DateTime.now(),
  );
}

// Kept for internal API responses
class AuthResponse {
  final User user;
  final String token;

  const AuthResponse({
    required this.user,
    required this.token,
  });

  factory AuthResponse.fromJson(Map<String, dynamic> json) {
    return AuthResponse(
      user: User.fromJson(json['user'] as Map<String, dynamic>),
      token: json['token'] as String,
    );
  }
}